<?php

namespace KriSpiX\VideothequeBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * MovieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MovieRepository extends EntityRepository
{
    public function getMoviesGenres()
    {
        $qb = $this->createQueryBuilder('m');
        $qb->join('m.genres', 'g')->addSelect('g');
        return $qb->getQuery()->getResult();
    }
    
    public function getMoviesWithGenre($genre)
    {
        $qb = $this->createQueryBuilder('m');
        $qb->join('m.genres', 'g')->addSelect('g')
           ->where($qb->expr()->in('g.id', $genre->getId()));

        return $qb;
    }
        
    public function getMoviesWithKeyword($keyword)
    {
        $qb = $this->createQueryBuilder('m');
        $qb->join('m.keywords', 'k')->addSelect('k')
           ->where($qb->expr()->in('k.id', $keyword->getId()));

        return $qb;
    }

    public function getMovies()
    {
        $qb = $this->createQueryBuilder('m')
            ->leftJoin('m.genres', 'g')
            ->addSelect('g')
            ->leftJoin('m.keywords', 'k')
            ->addSelect('k')
            ->leftJoin('m.format', 'f')
            ->addSelect('f')
            ->orderBy('m.purchaseDate', 'DESC');

       return $qb;
    }

    public function getMoviesSearch($searchTerm)
    {
        $qb = $this->createQueryBuilder('m')
            ->where('m.title LIKE :title')
            ->setParameter('title', '%'.$searchTerm.'%');

        return $qb;
    }

    public function getNewMovies()
    {
        $qb = $this->createQueryBuilder('m')
            ->where('m.purchaseDate >= :date')
            ->setParameter('date', (new \DateTime())->modify('-30 days'))
            ->orderBy('m.purchaseDate', 'DESC');

        return $qb;
    }

}
